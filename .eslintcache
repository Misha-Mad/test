[{"D:\\учеба\\dev\\test\\src\\index.js":"1","D:\\учеба\\dev\\test\\src\\reportWebVitals.js":"2","D:\\учеба\\dev\\test\\src\\components\\App\\App.js":"3","D:\\учеба\\dev\\test\\src\\components\\Title\\Title.js":"4","D:\\учеба\\dev\\test\\src\\components\\Vizualizator\\Vizualizator.js":"5","D:\\учеба\\dev\\test\\src\\utils\\SunRiseAPI.js":"6","D:\\учеба\\dev\\test\\src\\utils\\utils.js":"7","D:\\учеба\\dev\\test\\src\\components\\Loader\\Loader.js":"8"},{"size":639,"mtime":1609935623370,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609778411309,"results":"11","hashOfConfig":"10"},{"size":3746,"mtime":1611932783120,"results":"12","hashOfConfig":"10"},{"size":643,"mtime":1611654900082,"results":"13","hashOfConfig":"10"},{"size":1800,"mtime":1612347311050,"results":"14","hashOfConfig":"10"},{"size":635,"mtime":1611855529548,"results":"15","hashOfConfig":"10"},{"size":91,"mtime":1611736804933,"results":"16","hashOfConfig":"10"},{"size":184,"mtime":1611902974326,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dpn8c5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\учеба\\dev\\test\\src\\index.js",[],["36","37"],"D:\\учеба\\dev\\test\\src\\reportWebVitals.js",[],"D:\\учеба\\dev\\test\\src\\components\\App\\App.js",["38"],"import './App.css';\r\nimport {useState, useEffect, useCallback} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Title from '../Title/Title';\r\nimport Vizualizator from '../Vizualizator/Vizualizator';\r\nimport Loader from '../Loader/Loader';\r\nimport sunriseApi from \"../../utils/SunRiseAPI\";\r\n\r\nfunction App() {\r\n    const [info, setInfo] = useState({});\r\n    const [civilTwilightBeginInPercent, setCivilTwilightBeginInPercent] = useState(30);\r\n    const [civilTwilightEndInPercent, setcivilTwilightEndInPercent] = useState(70);\r\n    const [sunriseTime, setSunriseTime] = useState('00:00:00');\r\n    const [sunsetTime, setSunsetTime] = useState('00:00:00');\r\n    const [date, setDate] = useState('');\r\n    const [latitude, setLatitude] = useState('');\r\n    const [longitude, setLongitude] = useState('');\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    function timeInPercents(time) {\r\n        let secondsSum;\r\n        time.includes('AM') ? secondsSum = 0 : secondsSum = 720;\r\n        const arr = time.split(':', 2);\r\n        arr.forEach((e, i) => {\r\n            if (i === 0) {\r\n                secondsSum += e * 60;\r\n            }\r\n            if (i === 1) {\r\n                secondsSum += +e;\r\n            }\r\n        })\r\n        let onePercent = 1440 / 100;\r\n        return secondsSum / onePercent;\r\n    }\r\n\r\n    function formatTime(results) {\r\n        setSunriseTime(results.sunrise.replace(' AM', ''));\r\n        let newSunsetTime = results.sunset.replace(' PM', '').split(':');\r\n        newSunsetTime[0] = +newSunsetTime[0] + 12;\r\n        newSunsetTime = newSunsetTime.join(':');\r\n        setSunsetTime(newSunsetTime);\r\n    }\r\n\r\n    function todayDateCalculate() {\r\n        const todayDate = new Date();\r\n        return todayDate.getFullYear() + '-' + (todayDate.getMonth() + 1) + '-' + todayDate.getDate();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newDate = todayDateCalculate();\r\n        setDate(newDate);\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setLatitude(position.coords.latitude.toFixed(7));\r\n            setLongitude(position.coords.longitude.toFixed(7));\r\n        });\r\n    }, [])\r\n\r\n    const getInfo = useCallback(() => {\r\n        setLoading(true);\r\n        sunriseApi.getInfo(date, latitude, longitude)\r\n            .then((res) => {\r\n                setInfo(res.results);\r\n                setCivilTwilightBeginInPercent(timeInPercents(res.results.civil_twilight_begin));\r\n                setcivilTwilightEndInPercent(timeInPercents(res.results.civil_twilight_end));\r\n                formatTime(res.results);\r\n            })\r\n            .then(()=> setTimeout(()=> {\r\n                setLoading(false)\r\n            }, 3000))\r\n            .catch(err => console.log(err))\r\n    }, [date, latitude, longitude])\r\n\r\n\r\n    return (\r\n        <div className='App'>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Title/>\r\n                </Route>\r\n                <Route path=\"/day-length\">\r\n                    {longitude || latitude !== '' ?\r\n                        <Vizualizator\r\n                            isLoading={isLoading}\r\n                            onGetInfo={getInfo}\r\n                            info={info}\r\n                            date={date}\r\n                            civilTwilightBeginInPercent={civilTwilightBeginInPercent}\r\n                            civilTwilightEndInPercent={civilTwilightEndInPercent}\r\n                            sunriseTime={sunriseTime}\r\n                            sunsetTime={sunsetTime}\r\n                        />\r\n                        : <Redirect to={'/'}/>}\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\учеба\\dev\\test\\src\\components\\Title\\Title.js",[],"D:\\учеба\\dev\\test\\src\\components\\Vizualizator\\Vizualizator.js",[],"D:\\учеба\\dev\\test\\src\\utils\\SunRiseAPI.js",[],"D:\\учеба\\dev\\test\\src\\utils\\utils.js",[],"D:\\учеба\\dev\\test\\src\\components\\Loader\\Loader.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":14},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]